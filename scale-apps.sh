#!/bin/bash

set -e

# –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
PRODUCERS=1
CONSUMERS=1
MESSAGES_PER_SECOND=1
DURATION=0

# –§—É–Ω–∫—Ü–∏—è –ø–æ–º–æ—â–∏
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–û–ü–¶–ò–ò]"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  -p, --producers NUM         –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—é—Å–µ—Ä–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1)"
    echo "  -c, --consumers NUM         –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Å—å—é–º–µ—Ä–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1)"
    echo "  -r, --rate NUM              –°–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ–∫—É–Ω–¥—É –Ω–∞ –ø—Ä–æ–¥—é—Å–µ—Ä (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1)"
    echo "  -d, --duration NUM          –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (0 = –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 0)"
    echo "  -h, --help                  –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 -p 3 -c 2 -r 5           –ó–∞–ø—É—Å—Ç–∏—Ç—å 3 –ø—Ä–æ–¥—é—Å–µ—Ä–∞ –∏ 2 –∫–æ–Ω—Å—å—é–º–µ—Ä–∞, 5 —Å–æ–æ–±—â–µ–Ω–∏–π/—Å–µ–∫"
    echo "  $0 -p 5 -c 3 -r 10 -d 300   –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–∞ 5 –º–∏–Ω—É—Ç —Å –≤—ã—Å–æ–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–æ–π"
    echo "  $0 -p 0 -c 5                –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Å—å—é–º–µ—Ä—ã"
}

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
while [[ $# -gt 0 ]]; do
    case $1 in
        -p|--producers)
            PRODUCERS="$2"
            shift 2
            ;;
        -c|--consumers)
            CONSUMERS="$2"
            shift 2
            ;;
        -r|--rate)
            MESSAGES_PER_SECOND="$2"
            shift 2
            ;;
        -d|--duration)
            DURATION="$2"
            shift 2
            ;;
        -h|--help)
            show_help
            exit 0
            ;;
        *)
            echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            show_help
            exit 1
            ;;
    esac
done

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è:"
echo "   –ü—Ä–æ–¥—é—Å–µ—Ä—ã: $PRODUCERS"
echo "   –ö–æ–Ω—Å—å—é–º–µ—Ä—ã: $CONSUMERS"
echo "   –°–∫–æ—Ä–æ—Å—Ç—å: $MESSAGES_PER_SECOND —Å–æ–æ–±—â–µ–Ω–∏–π/—Å–µ–∫ –Ω–∞ –ø—Ä–æ–¥—é—Å–µ—Ä"
echo "   –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: $([ $DURATION -eq 0 ] && echo "–±–µ—Å–∫–æ–Ω–µ—á–Ω–æ" || echo "$DURATION —Å–µ–∫")"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Kafka –∑–∞–ø—É—â–µ–Ω
if ! docker compose ps | grep -q "kafka-1.*Up"; then
    echo "‚ùå Kafka –∫–ª–∞—Å—Ç–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω!"
    echo "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞: ./start-kafka.sh"
    exit 1
fi

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
export MESSAGES_PER_SECOND
export DURATION_SECONDS=$DURATION

echo ""
echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π..."

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –µ—Å–ª–∏ –µ—Å—Ç—å
docker compose -f docker-compose.apps.yml down 2>/dev/null || true

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ–º
if [ $PRODUCERS -gt 0 ]; then
    echo "üì§ –ó–∞–ø—É—Å–∫ $PRODUCERS –ø—Ä–æ–¥—é—Å–µ—Ä(–æ–≤)..."
    docker compose -f docker-compose.apps.yml up -d --build --scale producer=$PRODUCERS producer
fi

if [ $CONSUMERS -gt 0 ]; then
    echo "üì• –ó–∞–ø—É—Å–∫ $CONSUMERS –∫–æ–Ω—Å—å—é–º–µ—Ä(–æ–≤)..."
    docker compose -f docker-compose.apps.yml up -d --build --scale consumer=$CONSUMERS consumer
fi

echo ""
echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω—ã!"
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
docker compose -f docker-compose.apps.yml ps

echo ""
echo "üìù –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –ø—Ä–æ–¥—é—Å–µ—Ä–æ–≤:  docker compose -f docker-compose.apps.yml logs -f producer"
echo "   –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∫–æ–Ω—Å—å—é–º–µ—Ä–æ–≤: docker compose -f docker-compose.apps.yml logs -f consumer"
echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:       docker compose -f docker-compose.apps.yml down"
echo "   Kafka UI:                   http://localhost:8180"

# –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –æ–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
if [ $DURATION -gt 0 ]; then
    echo ""
    echo "‚è±Ô∏è  –†–∞–±–æ—Ç–∞–µ–º $DURATION —Å–µ–∫—É–Ω–¥..."
    sleep $DURATION
    echo "‚èπÔ∏è  –í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    docker compose -f docker-compose.apps.yml down
    echo "üèÅ –ì–æ—Ç–æ–≤–æ!"
fi 