#!/bin/bash

echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
check_success() {
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $1${NC}"
    else
        echo -e "${RED}‚ùå $1${NC}"
        exit 1
    fi
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å)
echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
docker compose -f docker-compose.infrastructure.yml down > /dev/null 2>&1
docker compose -f docker-compose.applications.yml down > /dev/null 2>&1

# –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã (NATS + PostgreSQL)
echo -e "${YELLOW}üèóÔ∏è –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã...${NC}"
docker compose -f docker-compose.infrastructure.yml up -d
check_success "–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞"

# –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î
echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö (30 —Å–µ–∫—É–Ω–¥)...${NC}"
sleep 30

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å PostgreSQL A
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ PostgreSQL A...${NC}"
for i in {1..10}; do
    if docker exec postgres-a pg_isready -U postgres > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ PostgreSQL A –≥–æ—Ç–æ–≤${NC}"
        break
    fi
    if [ $i -eq 10 ]; then
        echo -e "${RED}‚ùå PostgreSQL A –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        exit 1
    fi
    sleep 2
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å PostgreSQL B
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ PostgreSQL B...${NC}"
for i in {1..10}; do
    if docker exec postgres-b pg_isready -U postgres > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ PostgreSQL B –≥–æ—Ç–æ–≤${NC}"
        break
    fi
    if [ $i -eq 10 ]; then
        echo -e "${RED}‚ùå PostgreSQL B –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        exit 1
    fi
    sleep 2
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å NATS
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ NATS...${NC}"
sleep 10

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π...${NC}"
docker compose -f docker-compose.applications.yml up -d
check_success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω—ã"

# –ñ–¥–µ–º —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã (10 —Å–µ–∫—É–Ω–¥)...${NC}"
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "${YELLOW}üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:${NC}"
echo ""

# –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞
echo -e "${YELLOW}üèóÔ∏è –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞:${NC}"
docker compose -f docker-compose.infrastructure.yml ps

echo ""

# –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo -e "${YELLOW}üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è:${NC}"
docker compose -f docker-compose.applications.yml ps

echo ""
echo -e "${GREEN}‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏ –∑–∞–ø—É—â–µ–Ω–∞!${NC}"
echo ""
echo -e "${YELLOW}üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:${NC}"
echo "  ‚Ä¢ Database A: localhost:5432 (postgres/password)"
echo "  ‚Ä¢ Database B: localhost:5433 (postgres/password)"
echo "  ‚Ä¢ NATS A: http://localhost:8222"
echo "  ‚Ä¢ NATS B: http://localhost:8223"
echo ""
echo -e "${YELLOW}üîç –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo "  ‚Ä¢ –õ–æ–≥–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞: ./logs.sh data-generator"
echo "  ‚Ä¢ –õ–æ–≥–∏ publisher: ./logs.sh outbox-publisher"
echo "  ‚Ä¢ –õ–æ–≥–∏ processor: ./logs.sh inbox-processor"
echo "  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É: ./stop-replication.sh"
echo "  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∞–Ω–Ω—ã–µ: ./check-replication.sh"
echo "" 